---

- name: "Install python2 and python-simplejson"
  become: True
  raw: "yum install -y python python-simplejson || (apt-get update && apt-get install -y python2.7 python-simplejson)"

- name: Gather facts
  setup:

- name: Turn off SELINUX
  lineinfile:
    dest: /etc/selinux/config
    regexp: '^SELINUX(.*)$'
    line: 'SELINUX=permissive'
  become: True
  ignore_errors: True

- name: Turn off Firewalld
  shell: systemctl stop firewalld && systemctl disable firewalld
  become: True
  ignore_errors: True

- name: Add hostname to /etc/hosts
  replace:
    dest: /etc/hosts
    regexp: 'localhost'
    replace: 'localhost {{ inventory_hostname }}'
  become: True

# Deps

## Ubuntu
- name: Install ca certs [Debian]
  package: name={{item}} state=latest
  become: True
  with_items:
    - ca-certificates
    - apt-transport-https
  when:
    - ansible_os_family == 'Debian'


- apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  become: True
  when:
      - ansible_os_family == 'Debian'

- name: Install google cloud apt gpg key [Debian]
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: present
  become: True
  when:
    - ansible_os_family == 'Debian'

- name: Install k8s components [Debian]
  apt:
    name: "{{ item }}"
    state: present
    allow_unauthenticated: yes
    update_cache: True
  become: True
  with_items:
    - docker.io
    - kubelet={{ kube_version }}-00
    - kubeadm={{ kube_version }}-00
    - kubectl={{ kube_version }}-00
    - kubernetes-cni
    - ebtables
  when:
    - ansible_os_family == 'Debian'

## CentOS
- yum_repository:
    name: kubernetes
    description: Kubernetes repo
    baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
    state: present
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: no
    repo_gpgcheck: yes
  become: True
  when:
    - ansible_os_family == 'RedHat'

- name: Install k8s components [RedHat]
  yum:
    name: "{{ item }}"
    state: present
    update_cache: True
  with_items:
    - docker
    - kubelet-{{ kube_version }}
    - kubeadm-{{ kube_version }}
    - kubectl-{{ kube_version }}
    - kubernetes-cni
    - ebtables
    - git
    - gcc
  become: True
  when:
    - ansible_os_family == 'RedHat'

# Docker

- name: Enable and start docker
  systemd: name=docker state=started enabled=yes
  become: True

## Detect and set cgroup driver (Debian)
- name: Get CGROUP_DRIVER [Debian]
  become: True
  shell: "docker info | grep \"Cgroup Driver\" | awk '{print $3}'"
  register: cgroup_driver
  when:
      - ansible_os_family == 'Debian'

- name: Log CGROUP_DRIVER [Debian]
  debug: msg="{{ cgroup_driver }}"
  when:
      - ansible_os_family == 'Debian'

- name: Set CGROUP_DRIVER [Debian]
  lineinfile:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^(.*)KUBELET_KUBECONFIG_ARGS=(.*)$'
    line: '\1KUBELET_KUBECONFIG_ARGS=--cgroup-driver={{ cgroup_driver.stdout }} \2'
    backup: yes
    backrefs: yes
  become: True
  when:
    - ansible_os_family == 'Debian'

# DNS
- name: Replace DNS IP
  replace:
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '10.96.0.10'
    replace: "{{ kube_dns_ip }}"
  become: True

- name: reload systemd
  become: True
  command: systemctl daemon-reload

- name: Stop kubelet
  become: True
  systemd: name=kubelet state=stopped

- name: Enable and start kubelet
  become: True
  systemd: name=kubelet state=started enabled=yes
