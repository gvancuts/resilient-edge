# -*- mode: ruby -*-
# vi: set ft=ruby :

# currently provisions 1 master and {node_count} nodes (default 2)

# master
master_memory=2048
master_name="node-0"

# nodes
node_name_prefix="node"
node_count=0
node_memory=1024

groups = {}
groups["k8s-cluster"] = []

Vagrant.configure("2") do |config|
    config.vm.boot_timeout = 600
    # master treated separately
    config.vm.define "#{master_name}" do |node|
      groups["kube-masters"] = "node-0"
      groups["k8s-cluster"].push("node-0")
      node.vm.box = "ubuntu/xenial64"
      node.vm.hostname = "#{master_name}"
      # config.vm.box_check_update = false
      #node.vm.network "forwarded_port", guest: 6443, host: 6443

      node.vm.network "private_network", ip: "172.168.1.100", auto_config: true
      node.vm.network "public_network", ip: "192.168.1.100", auto_config: true, bridge: "bridge0"

      # config.vm.synced_folder "../data", "/vagrant_data"

      node.vm.provider "virtualbox" do |vb|
        # Display the VirtualBox GUI when booting the machine
        vb.gui = false

        # Customize the amount of memory on the VM:
        vb.memory = "#{master_memory}"

      end
        # shell commands to run on each machine
       node.vm.provision "shell", inline: <<-SHELL
         apt-get update
         apt-get install -y python2.7
         ln -s /usr/bin/python2.7 /usr/bin/python
       SHELL
    end
    # rest of nodes
    if node_count > 0
        (1..node_count).each do |i|
          config.vm.define "node-#{i}" do |node|
              node.vm.box = "ubuntu/xenial64"
              node.vm.hostname = "#{node_name_prefix}-#{i}"
              # config.vm.box_check_update = false
              #node.vm.network "forwarded_port", guest: 6443, host: 6443

              node.vm.network "private_network", ip: "172.168.1.#{i + 100}", auto_config: true
              node.vm.network "public_network", ip: "192.168.1.#{i + 100}", auto_config: true, bridge: "bridge0"

              # config.vm.synced_folder "../data", "/vagrant_data"

              node.vm.provider "virtualbox" do |vb|
                # Display the VirtualBox GUI when booting the machine
                vb.gui = false

                # Customize the amount of memory on the VM:
                vb.memory = "#{node_memory}"

              end
                # shell commands to run on each machine
               node.vm.provision "shell", inline: <<-SHELL
                 apt-get update
                 apt-get install -y python2.7
                 ln -s /usr/bin/python2.7 /usr/bin/python
               SHELL
               
              groups["k8s-cluster"].push("node-#{i}")
              if groups.has_key?("kube-workers")
                  groups["kube-workers"].push("node-#{i}")
              else
                groups["kube-workers"] = []
                groups["kube-workers"].push("node-#{i}")
              end
            end
        end
    end

    # other groups

    groups["k8s-cluster:vars"] = {
            "ansible_user" => "ubuntu",
            "ansible_python_interpreter" => "/usr/bin/python2.7",
            "ansible_ssh_private_key_file" => "/Users/jascott1/.ssh/jascott1-sc",
    }

#    groups["kube-control:children"] = ["node-0"]

    groups["kube-control:children"] = []
    groups["kube-control:children"].push("node-0")

    config.vm.provision "ansible" do |ansible|
        ansible.groups = groups
        ansible.playbook = "empty.yaml"
    end
end
